#include <stdio.h>

int lcmCalculate(int a, int b);

int main() {
  int n1, n2, lcmOf;

  printf("InIn Recursion : Find the LCM of two numbers \n");
  printf("------------------------------------------\n");
  printf(" Input 1st number for LCM : ");
  scanf("%d", &n1);
  printf(" Input 2nd number for LCM : ");
  scanf("%d", &n2);

  // Ensures that first parameter of lcm must be smaller than 2nd
  if (n1 > n2) {
    lcmOf = lcmCalculate(n2, n1); //call the function lcmCalculate for lcm calculation
  } else {
    lcmOf = lcmCalculate(n1, n2); //call the function lcmCalculate for lcm calculation
  }
  printf(" The LCM of %d and %d : %d\n", n1, n2, lcmOf);
  return 0;
}

int lcmCalculate(int a, int b) {
  static int m = 0; // The recursive function lcm() takes two integer numbers as arguments. Take a static variable m and initialize it to zero, then update it with one of the numbers. Here we are going to update the variable m with b, because the variable m will always be divisible by the variable b. For this to happen, we only need to verify that m is divisible by a. (m%a == 0).

  // Increments m by adding max value to it
  m = m + b;

  // Find a common multiple then return the m.
  if ((m % a == 0) && (m % b == 0)) {
    return m;
  } else {
    lcmCalculate(a, b); //calling the function lcmCalculate itself
  }
}
