#include <stdio.h>
#include <stdlib.h>

struct Nodo {
	int dato;
	struct Nodo* siguiente;
};

struct Nodo* crearNodo(int dato) {
	struct Nodo* nuevoNodo = (struct Nodo*)malloc(sizeof(struct Nodo));
	if (nuevoNodo == NULL) {
		printf("Error al asignar memoria.\n");
		exit(EXIT_FAILURE);
	}
	nuevoNodo->dato = dato;
	nuevoNodo->siguiente = NULL;
	return nuevoNodo;
}

void insertarFinal(struct Nodo** cabeza, int dato) {
	struct Nodo* nuevoNodo = crearNodo(dato);
	if (*cabeza == NULL) {
		*cabeza = nuevoNodo;
		return;
	}
	struct Nodo* temp = *cabeza;
	while (temp->siguiente != NULL) {
		temp = temp->siguiente;
	}
	temp->siguiente = nuevoNodo;
}

void mostrarLista(struct Nodo* nodo) {
	while (nodo != NULL) {
		printf("%d -> ", nodo->dato);
		nodo = nodo->siguiente;
	}
	printf("NULL\n");
}

int main() {
	struct Nodo* lista = NULL;
	int op;
	int valor;
	
	do {
		printf("\n--- MENU ---\n");
		printf("1. Agregar nodo.\n");
		printf("2. Mostrar lista.\n");
		printf("3. Salir.\n");
		printf("Ingrese una opcion: ");
		scanf("%d", &op);
		
		switch (op) {
		case 1:
			printf("Ingrese el valor del nodo: ");
			scanf("%d", &valor);
			insertarFinal(&lista, valor);
			break;
		case 2:
			printf("Mostrando lista:\n");
			mostrarLista(lista);
			break;
		case 3:
			printf("Saliendo del programa.\n");
			break;
		default:
			printf("Opcion invalida. Por favor, intente de nuevo.\n");
			break;
		}
	} while (op != 3);
	
	return 0;
}
